{
  // Cursor navigation settings
  "editor.cursorSurroundingLines": 8,
  "editor.cursorSurroundingLinesStyle": "all",
  "editor.scrollBeyondLastLine": false,
  "editor.stickyScroll.enabled": false,
  // Copilot Chat configuration
  "github.copilot.chat.agent.thinkingTool": true,
  "chat.agent.enabled": true,
  "github.copilot.chat.codesearch.enabled": true,
  "chat.agent.maxRequests": 10000,
  "chat.editing.confirmEditRequestRemoval": false,
  "chat.editing.confirmEditRequestRetry": false,
  // Always open files from untrusted workspaces
  "security.workspace.trust.untrustedFiles": "open",
  // Increase terminal scrollback similar to using a terminal split in Neovim
  "terminal.integrated.scrollback": 10000,
  "editor.fontFamily": "Fira Code Retina, JetBrains Mono, Cascadia Code, monospace",
  "editor.fontLigatures": true,
  "terminal.integrated.fontFamily": "Fira Code Retina, JetBrains Mono, Cascadia Code, monospace",
  "terminal.integrated.defaultProfile.linux": "zsh",
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.defaultProfile.windows": "pwsh",
  "editor.formatOnSave": true,
  "window.zoomLevel": 0.2,
  // Cursor Shape & Style
  "editor.cursorStyle": "block-outline", // options: "line", "block", "underline", "line-thin", "block-outline", "underline-thin"
  "editor.cursorWidth": 3, // only applies when cursorStyle is "line" (default is 2px)
  "workbench.colorCustomizations": {
    "editorCursor.foreground": "#FFFFFF",

    // Black background
    "editor.background": "#000000",
    "editor.foreground": "#D4D4D4",
    "editorGutter.background": "#000000",
    "sideBar.background": "#000000",
    "activityBar.background": "#000000",
    "statusBar.background": "#000000",
    "titleBar.activeBackground": "#000000",
    "titleBar.inactiveBackground": "#000000",
    "editorGroupHeader.tabsBackground": "#000000",
    "tab.activeBackground": "#000000",
    "tab.inactiveBackground": "#000000",
    "panel.background": "#000000",
    "quickInput.background": "#000000",
    "breadcrumb.background": "#000000",
    "breadcrumbPicker.background": "#000000",
    "sideBar.border": "#000000",
    "activityBar.border": "#000000",
    "panel.border": "#000000",
    "statusBar.border": "#000000",
    "editorGroup.border": "#000000",
    "editorGroupHeader.tabsBorder": "#000000",
    "tab.border": "#000000",
    "sideBySideEditor.verticalBorder": "#000000",
    "sideBySideEditor.horizontalBorder": "#000000",
    "editorGroup.emptyBackground": "#000000",
    "editorGroupHeader.noTabsBackground": "#000000",
    "editorPane.background": "#000000",
    "panelSection.background": "#000000",
    // // Scroll bars
    "scrollbarSlider.background": "#00000080",
    // "scrollbarSlider.hoverBackground": "#000000A0",
    // "scrollbarSlider.activeBackground": "#000000",

    // Minimap
    "minimap.background": "#000000",
    "minimap.selectionHighlight": "#222222",
    "minimap.errorHighlight": "#000000",
    "minimap.warningHighlight": "#000000",
    "minimap.findMatchHighlight": "#222222",

    // Editor line highlight/gutter (for subtlety, optional)
    "editor.lineHighlightBackground": "#202020",
    "editorWhitespace.foreground": "#222222",
    "editor.selectionBackground": "#656A48",
    "editor.inactiveSelectionBackground": "#505050",
    "editor.selectionHighlightBackground": "#505050",
    "editorBracketMatch.background": "#505050",
    "editorBracketMatch.border": "#505050",
    "editor.wordHighlightBackground": "#505050",
    "editorLineNumber.foreground": "#868686",
    "editorIndentGuide.background": "#515C6A",
    "editorIndentGuide.activeBackground": "#515C6A",

    // Search/Find Widget
    "editorWidget.background": "#000000",
    "peekViewEditor.background": "#000000",
    "peekViewResult.background": "#000000",
    "peekViewTitle.background": "#000000",

    // Popups & notifications
    "widget.shadow": "#00000000",
    "notification.background": "#000000",
    "notification.toast.background": "#000000",
    "notifications.background": "#000000",
    "notifications.border": "#000000",

    // Dropdowns, pickers
    "dropdown.background": "#000000",
    "dropdown.border": "#000000",
    "input.background": "#000000",
    "input.border": "#000000",

    // Context/right-click menus
    "menu.background": "#000000",
    "menu.selectionBackground": "#222222",

    // Terminal
    "terminal.background": "#000000"
  },
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      { "scope": "source", "settings": { "foreground": "#D4D4D4" } },
      { "scope": "keyword", "settings": { "foreground": "#86C9EF" } },
      { "scope": "keyword.control", "settings": { "fontStyle": "bold", "foreground": "#86C9EF" } },
      { "scope": "keyword.operator", "settings": { "foreground": "#000000", "fontStyle": "bold" } },
      { "scope": "constant.numeric", "settings": { "foreground": "#BE966E" } },
      { "scope": "string", "settings": { "foreground": "#8FAFDF" } },
      { "scope": "constant.character.escape", "settings": { "foreground": "#D7BA7D" } },
      { "scope": "comment", "settings": { "foreground": "#7A987A" } },
      { "scope": "comment.documentation", "settings": { "foreground": "#7A987A" } },
      { "scope": "punctuation.definition.tag", "settings": { "foreground": "#808080" } },
      { "scope": "entity.name.type", "settings": { "foreground": "#4EC9B0" } },
      { "scope": "entity.name.type.interface", "settings": { "foreground": "#B8D7A3" } },
      { "scope": "variable.other.enummember", "settings": { "foreground": "#4FC1FF" } },
      { "scope": "entity.name.function", "settings": { "foreground": "#9CDCFE" } },
      { "scope": "punctuation", "settings": { "foreground": "#D4D4D4" } },
      { "scope": "markup.underline.link", "settings": { "foreground": "#8FAFDF", "fontStyle": "bold" } }
    ]
  },
  "editor.semanticTokenColorCustomizations": {
    "enabled": true,
    "rules": {
      "variable": "#D4D4D4",
      "variable.readonly": "#D4D4D4",
      "parameter": "#D4D4D4",
      "property": "#D4D4D4",
      "enumMember": "#4FC1FF",
      "function": "#9CDCFE",
      "method": "#9CDCFE",
      "class": "#4EC9B0",
      "struct": "#4EC9B0",
      "interface": "#B8D7A3",
      "typeParameter": "#4EC9B0",
      "type": "#4EC9B0",
      "number": "#BE966E",
      "string": "#8FAFDF",
      "comment": "#7A987A",
      "keyword": "#86C9EF",
      "operator": "#000000",
      "namespace": "#4EC9B0"
    }
  },
  // Blinking & Animation
  "editor.cursorBlinking": "solid", // options: "blink", "smooth", "phase", "expand", "solid"
  "editor.cursorSmoothCaretAnimation": "off", // only with "smooth" blinking
  // Editor UI to match Vim configuration
  "editor.lineNumbers": "relative",
  "editor.renderLineHighlight": "none",
  // Use system clipboard in Vim extension
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.handleKeys": {
    "<tab>": false,
    "<S-tab>": false,
    "<C-o>": true,
    "<C-i>": true
  },
  // Search behaviour like Vim
  "vim.ignorecase": true,
  "vim.smartcase": true,
  "vim.incsearch": true,
  "vim.hlsearch": true,
  "vim.startofline": false,
  // Highlighted Yank
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.duration": 125,
  // Easy Motion
  "vim.easymotion": true,
  // Surround
  "vim.surround": true,
  // Camel Case Motion - disabed for now as conflicts with other bindings
  // "vim.camelCaseMotion.enable": true,
  // Optimized for Colemak-Mod-DH
  "vim.easymotionKeys": "tsraneiodhgmplfuc,bjvk",
  // Leader key and custom key mappings
  "vim.leader": "<space>",
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["s"],
      "after": ["<leader>", "<leader>", "2", "s"]
    },
    {
      "before": ["S"],
      "after": ["<leader>", "<leader>", "2", "S"]
    },
    {
      "before": ["<leader>", "v"],
      "after": ["<C-v>"]
    },
    {
      "before": ["<tab>"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": ["<S-tab>"],
      "commands": ["editor.action.outdentLines"]
    },
    {
      "before": ["<C-u>"],
      "after": ["16k"]
    },
    {
      "before": ["<C-d>"],
      "after": ["16j"]
    },
    {
      "before": ["<D-Left>"],
      "commands": ["workbench.action.navigateBack"]
    },
    {
      "before": ["<D-Right>"],
      "commands": ["workbench.action.navigateForward"]
    },
    // { "before": ["<C-o>"], "commands": ["workbench.action.navigateBack"] },
    // { "before": ["<C-i>"], "commands": ["workbench.action.navigateForward"] },
    // { "before": ["<C-h>"], "commands": ["workbench.action.focusLeftGroup"] },
    // { "before": ["<C-j>"], "commands": ["workbench.action.focusBelowGroup"] },
    // { "before": ["<C-k>"], "commands": ["workbench.action.focusAboveGroup"] },
    // { "before": ["<C-l>"], "commands": ["workbench.action.focusRightGroup"] },
    {
      "before": ["<leader>", "<leader>"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["<leader>", "f", "m"],
      "commands": ["workbench.files.action.focusFilesExplorer"]
    },
    // Fuzzy finder
    {
      "before": ["<leader>", "s", "g"],
      "commands": ["find-it-faster.findWithinFiles"]
    },
    {
      "before": ["<leader>", "s", "f"],
      "commands": ["find-it-faster.findFiles"]
    },
    {
      "before": ["<leader>", "s", "t"],
      "commands": ["find-it-faster.findWithinFilesWithTypeFilter"]
    },
    {
      "before": ["<leader>", "s", "r"],
      "commands": ["find-it-faster.resumeSearch"]
    },
    //     {
    //   "command": "workbench.files.action.focusFilesExplorer",
    //     "key": "ctrl+e",
    //     "when": "editorTextFocus"
    // },
    {
      "before": ["<leader>", "e"],
      "commands": ["workbench.view.explorer"]
    },
    {
      "before": ["v", "i", "g"],
      "after": ["g", "g", "V", "G"]
    },
    {
      "before": ["y", "i", "g"],
      "after": ["g", "g", "V", "G", "y"]
    },
    {
      "before": ["g", "d"],
      "commands": ["editor.action.revealDefinition"]
    },
    {
      "before": ["g", "p"],
      "commands": ["editor.action.peekDefinition"]
    },
    {
      "before": ["g", "i"],
      "commands": ["editor.action.goToImplementation"]
    },
    {
      "before": ["g", "r"],
      "commands": ["editor.action.goToReferences"]
    },
    {
      "before": ["g", "h"],
      "commands": ["C_Cpp.SwitchHeaderSource"]
    },
    {
      "before": ["<leader>", "c", "r"],
      "commands": ["editor.action.rename"]
    },
    {
      "before": ["<leader>", "c", "i"],
      "commands": ["editor.action.triggerParameterHints"]
    },
    {
      "before": ["<leader>", "e", "e"],
      "commands": ["workbench.actions.view.problems"]
    },
    {
      "before": ["<leader>", "e", "n"],
      "commands": ["editor.action.marker.next"]
    },
    {
      "before": ["<leader>", "e", "p"],
      "commands": ["editor.action.marker.prev"]
    },
    {
      "before": ["]", "b"],
      "commands": ["workbench.action.nextEditor"]
    },
    {
      "before": ["[", "b"],
      "commands": ["workbench.action.previousEditor"]
    },
    {
      "before": ["<leader>", "b", "d"],
      "commands": ["workbench.action.closeActiveEditor"]
    },
    {
      "before": ["<leader>", "b", "o"],
      "commands": ["workbench.action.closeOtherEditors"]
    },
    {
      "before": ["<leader>", "b", "b"],
      "after": ["<C-6>"]
    },
    {
      "before": ["<leader>", "w", "f"],
      "commands": ["workbench.action.toggleZenMode"]
    },
    {
      "before": ["<leader>", "w", "F"],
      "commands": ["workbench.action.toggleFullScreen"]
    },
    {
      "before": ["<S-h>"],
      "commands": [":bprevious"]
    },
    {
      "before": ["<S-l>"],
      "commands": [":bnext"]
    },
    {
      "before": ["leader", "w", "v"],
      "commands": [":vsplit"]
    },
    {
      "before": ["leader", "w", "s"],
      "commands": [":split"]
    },
    {
      "before": ["leader", "w", "h"],
      "commands": ["workbench.action.focusLeftGroup"]
    },
    {
      "before": ["leader", "w", "j"],
      "commands": ["workbench.action.focusBelowGroup"]
    },
    {
      "before": ["leader", "w", "k"],
      "commands": ["workbench.action.focusAboveGroup"]
    },
    {
      "before": ["leader", "w", "l"],
      "commands": ["workbench.action.focusRightGroup"]
    },
    // {
    //   "before": ["w"],
    //   "commands": [":w!"]
    // },
    {
      "before": ["leader", "q", "q"],
      "commands": [":q!"]
    },
    // {
    //   "before": ["leader", "x"],
    //   "commands": [":x!"]
    // },
    {
      "before": ["[", "d"],
      "commands": ["editor.action.marker.prev"]
    },
    {
      "before": ["]", "d"],
      "commands": ["editor.action.marker.next"]
    },
    // TODO: Should be <leader> c e? (ie. next fix.. mostly just easier to press)
    {
      "before": ["<leader>", "c", "e"],
      "commands": ["editor.action.quickFix"]
    },
    // {
    //   "before": ["<leader>", "p"],
    //   "commands": ["editor.action.formatDocument"]
    // },
    {
      "before": ["g", "h"],
      "commands": ["editor.action.showDefinitionPreviewHover"]
    },
    {
      "before": ["<leader>", "b", "p"],
      // Toggle pin/unpin on the active editor
      "commands": ["workbench.action.unpinEditor"],
      "when": "activeEditorIsPinned"
    },
    {
      "before": ["<leader>", "b", "p"],
      "commands": ["workbench.action.pinEditor"],
      "when": "!activeEditorIsPinned"
    },
    {
      "before": ["<leader>", "b", "P"],
      "commands": ["workbench.action.closeOtherEditors"]
    },
    {
      "before": ["<leader>", "d", "b"],
      "commands": ["editor.debug.action.toggleBreakpoint"]
    },
    {
      "before": ["<leader>", "d", "d"],
      "commands": ["workbench.debug.viewlet.action.disableAllBreakpoints"]
    },
    {
      "before": ["<leader>", "d", "e"],
      "commands": ["workbench.debug.viewlet.action.enableAllBreakpoints"]
    },
    {
      "before": ["<leader>", "d", "r"],
      "commands": ["workbench.debug.viewlet.action.removeAllBreakpoints"]
    },
    {
      "before": ["<leader>", "d", "a"],
      "commands": ["workbench.debug.viewlet.action.focusBreakpointsView"]
    },
    {
      "before": ["<leader>", "d", "c"],
      "commands": ["workbench.action.debug.continue"]
    },
    {
      "before": ["<Esc>"],
      "after": ["<Esc>"],
      "commands": [":nohl"]
    },
    // Use Visual Studio code undo rather than VSVim
    {
      "before": ["u"],
      "commands": [{ "command": "undo" }]
    },
    {
      "before": ["<C-r>"],
      "commands": [{ "command": "redo" }]
    }
  ],
  "vim.insertModeKeyBindings": [
    // Manually create undo stack
    { "before": ["<Esc>"], "after": ["<Esc>", "<C-g>u"] }
  ],
  "vim.visualModeKeyBindings": [
    {
      "before": ["<tab>"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": ["<S-tab>"],
      "commands": ["editor.action.outdentLines"]
    },
    {
      "before": ["<"],
      "commands": ["editor.action.outdentLines"]
    },
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    }
    // {
    //   "before": ["J"],
    //   "commands": ["editor.action.moveLinesDownAction"]
    // },
    // {
    //   "before": ["K"],
    //   "commands": ["editor.action.moveLinesUpAction"]
    // },
  ],
  // To improve performance
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },
  "workbench.colorTheme": "Visual Studio Dark",
  "window.titleBarStyle": "custom",

  "editor.minimap.enabled": false,
  "editor.fontSize": 11,
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  // Fuzzy Finder
  // "find-it-faster.general.useTerminalInEditor": true,
  // Zen Mode
  "zenMode.fullScreen": true,
  // "zenMode.showTabs": "none",
  "zenMode.hideStatusBar": false,
  "zenMode.hideActivityBar": true,
  "zenMode.centerLayout": true,
  "zenMode.hideLineNumbers": true,
  "window.commandCenter": false,
  "workbench.layoutControl.enabled": false,
  "workbench.activityBar.location": "hidden",
  "C_Cpp.intelliSenseEngine": "disabled",
  "github.copilot.enable": {
    "*": false,
    "plaintext": false,
    "markdown": false,
    "scminput": false
  }
}
