#!/usr/bin/env bash
set -euo pipefail

# Ensure Yazi works out-of-the-box:
# - Install yazi (brew/apt or cargo fallback)
# - Ensure ripgrep/bat/fd are installed
# - Create aliases for Debian's batcat/fdfind
# - Put yazi/ya on PATH via symlinks if installed via cargo

HAVE() { command -v "$1" >/dev/null 2>&1; }

SUDO_CMD=""
if [ "$(id -u)" -ne 0 ] && HAVE sudo; then
  SUDO_CMD="sudo"
fi

OS="$(uname -s)"

ensure_symlink() {
  local target="$1" link_path="$2"
  if [ -e "$target" ]; then
    if [ ! -e "$link_path" ]; then
      $SUDO_CMD ln -s "$target" "$link_path"
    fi
  fi
}

# Try to source shared helpers (truthy/ask) if available
if [ -n "${CHEZMOI_SOURCE_DIR:-}" ] && [ -f "$CHEZMOI_SOURCE_DIR/lib/run_ensure.sh" ]; then
  # shellcheck disable=SC1090
  . "$CHEZMOI_SOURCE_DIR/lib/run_ensure.sh"
fi

# Fallback implementations if not sourced
_truthy() {
  case "${1:-}" in
    1|true|TRUE|True|yes|YES|Yes|on|ON|On) return 0 ;;
    *) return 1 ;;
  esac
}

is_tty() { [ -t 0 ] && [ -t 1 ]; }

ask() {
  local prompt="$1"
  if ! is_tty; then
    echo "[skip] $prompt (non-interactive; default = no)"
    return 1
  fi
  read -r -p "$prompt [y/N] " reply
  [[ "$reply" =~ ^([yY]|[yY][eE][sS])$ ]]
}

confirm_yazi_install() {
  local method_msg="$1"
  if _truthy "${AUTO_INSTALL:-}"; then
    echo "[auto] Install yazi via $method_msg (AUTO_INSTALL=1)"
    return 0
  fi
  ask "Install yazi now via $method_msg?"
}

install_with_cargo() {
  # Skip if already installed
  if HAVE yazi || [ -x "$HOME/.cargo/bin/yazi" ]; then
    return
  fi
  # Install Rust toolchain non-interactively, then build Yazi
  if ! HAVE cargo; then
    curl -fsSL https://sh.rustup.rs | sh -s -- -y
    # shellcheck disable=SC1090
    . "$HOME/.cargo/env"
  fi
  cargo install --locked yazi-fm yazi-cli

  # Symlink yazi + ya to a root-owned bin to avoid PATH issues
  if [ -x "$HOME/.cargo/bin/yazi" ]; then
    $SUDO_CMD ln -sf "$HOME/.cargo/bin/yazi" /usr/local/bin/yazi
  fi
  if [ -x "$HOME/.cargo/bin/ya" ]; then
    $SUDO_CMD ln -sf "$HOME/.cargo/bin/ya" /usr/local/bin/ya
  fi
}

case "$OS" in
  Darwin)
    if ! HAVE brew; then
      echo "Homebrew not found; skipping macOS install for yazi." >&2
    else
      if ! HAVE yazi; then
        if confirm_yazi_install "Homebrew (brew install yazi)"; then
          brew list --formula --versions yazi >/dev/null 2>&1 || brew install yazi
        else
          echo "[skip] yazi install (AUTO_INSTALL not set)"
        fi
      fi
      brew list --formula --versions ripgrep >/dev/null 2>&1 || brew install ripgrep
      brew list --formula --versions fd >/dev/null 2>&1 || brew install fd
      brew list --formula --versions bat >/dev/null 2>&1 || brew install bat
    fi
    ;;
  Linux)
    if HAVE apt-get; then
      $SUDO_CMD apt-get update -y
      # Text + binary preview essentials
      $SUDO_CMD apt-get install -y ripgrep fd-find bat curl ca-certificates poppler-utils ffmpegthumbnailer imagemagick p7zip-full unzip jq file
      # Decide install plan for yazi and prompt unless AUTO_INSTALL.
      if ! HAVE yazi; then
        if apt-cache show yazi >/dev/null 2>&1; then
          if confirm_yazi_install "APT (apt-get install yazi)"; then
            $SUDO_CMD apt-get install -y yazi || true
          else
            echo "[skip] yazi install (AUTO_INSTALL not set)"
          fi
        else
          if confirm_yazi_install "cargo (compiles from source; slower)"; then
            install_with_cargo
          else
            echo "[skip] yazi install (AUTO_INSTALL not set)"
          fi
        fi
      fi
      # Debian provides bat as batcat and fd as fdfind. Add friendly aliases.
      if ! HAVE bat && [ -x /usr/bin/batcat ]; then
        $SUDO_CMD ln -sf /usr/bin/batcat /usr/local/bin/bat
      fi
      if ! HAVE fd && [ -x /usr/bin/fdfind ]; then
        $SUDO_CMD ln -sf /usr/bin/fdfind /usr/local/bin/fd
      fi
    else
      # Generic Linux fallback: try cargo
      if ! HAVE yazi; then
        if confirm_yazi_install "cargo (compiles from source; slower)"; then
          install_with_cargo
        else
          echo "[skip] yazi install (AUTO_INSTALL not set)"
        fi
      fi
      # Ensure helpful aliases if present
      [ -x /usr/bin/batcat ] && ensure_symlink /usr/bin/batcat /usr/local/bin/bat || true
      [ -x /usr/bin/fdfind ] && ensure_symlink /usr/bin/fdfind /usr/local/bin/fd || true
    fi
    ;;
  *)
    # Other OS: best effort via cargo
    if ! HAVE yazi; then
      install_with_cargo
    fi
    ;;
esac

echo "Yazi installation/configuration complete."


