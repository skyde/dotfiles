name: CI
on:
  push:
  pull_request:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Ensure chezmoi is installed (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          if ! command -v chezmoi >/dev/null; then
            echo "chezmoi not found. Attempting to install"
            if command -v brew >/dev/null; then
              brew install chezmoi
            else
              # Use GitHub releases as primary method for Linux
              CHEZMOI_VERSION="v2.52.3"
              if [[ $(uname -m) == "x86_64" ]]; then
                ARCH="amd64"
              elif [[ $(uname -m) == "arm64" ]] || [[ $(uname -m) == "aarch64" ]]; then
                ARCH="arm64"
              else
                ARCH="amd64"
              fi
              curl -fsSL "https://github.com/twpayne/chezmoi/releases/download/${CHEZMOI_VERSION}/chezmoi_${CHEZMOI_VERSION#v}_linux_${ARCH}.tar.gz" | \
                sudo tar -xzf - -C /usr/local/bin chezmoi
            fi
          fi

      - name: Ensure chezmoi is installed (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          if (-not (Get-Command chezmoi -ErrorAction SilentlyContinue)) {
            Write-Host 'chezmoi not found. Attempting to install.'
            # Try winget first, then fallback to direct download
            try {
              winget install twpayne.chezmoi -e --id twpayne.chezmoi
            } catch {
              Write-Host 'winget failed, trying direct download'
              $version = "v2.52.3"
              $url = "https://github.com/twpayne/chezmoi/releases/download/$version/chezmoi_$($version.Substring(1))_windows_amd64.zip"
              $zipPath = "$env:TEMP\chezmoi.zip"
              $extractPath = "$env:TEMP\chezmoi"
              Invoke-WebRequest -Uri $url -OutFile $zipPath
              Expand-Archive -Path $zipPath -DestinationPath $extractPath -Force
              $binPath = "$env:USERPROFILE\bin"
              if (-not (Test-Path $binPath)) { New-Item -ItemType Directory -Path $binPath }
              Copy-Item "$extractPath\chezmoi.exe" "$binPath\chezmoi.exe"
              echo "$binPath" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
            }
          }

      - name: Dry-run apply
        run: chezmoi apply --dry-run -S .

      - name: Doctor
        run: chezmoi doctor -S .

  linters:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y shellcheck
          # Install stylua via cargo since it's not in apt repos
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source ~/.cargo/env
          cargo install stylua
      - name: Shellcheck
        run: |
          find . -name '*.sh' -print | xargs -r shellcheck
      - name: Stylua
        run: |
          source ~/.cargo/env
          find dot_config/nvim -name '*.lua' | xargs -r stylua -c
