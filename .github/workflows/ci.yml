name: CI

on:
  push:
    branches: [main]
  pull_request:
  schedule:
    - cron: "0 8 * * 1"   # weekly bitrot check (Mon 08:00 UTC)

permissions:
  contents: read           # least-privilege default
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  chezmoi-smoke:
    name: Chezmoi smoke on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Harden runner (audit egress)
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
      - uses: actions/checkout@v4

      # Use an ephemeral $HOME so we can do a real apply safely
      - name: Set ephemeral HOME (Unix)
        if: runner.os != 'Windows'
        run: |
          echo "HOME=$RUNNER_TEMP/home" >> "$GITHUB_ENV"
          mkdir -p "$RUNNER_TEMP/home"
      - name: Set ephemeral HOME (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $homeTmp = Join-Path $env:RUNNER_TEMP 'home'
          New-Item -ItemType Directory -Force -Path $homeTmp | Out-Null
          "HOME=$homeTmp" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8

      # Install chezmoi (official one-liner)
      - name: Install chezmoi (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          sh -c "$(curl -fsLS get.chezmoi.io)" -- -b "$RUNNER_TEMP/bin"
          echo "$RUNNER_TEMP/bin" >> "$GITHUB_PATH"
      - name: Install chezmoi (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          winget install -e --id twpayne.chezmoi --accept-package-agreements --accept-source-agreements
          chezmoi --version

      - name: Doctor
        run: chezmoi doctor -S .

      # Real apply to the ephemeral HOME (deterministic & safe)
      - name: Apply to ephemeral HOME
        run: chezmoi apply -S . --destination "$HOME" --verbose

      # Verify idempotence (2nd apply must yield no diff)
      - name: Verify idempotence
        run: |
          chezmoi apply -S . --destination "$HOME" --verbose
          if [ -n "$(chezmoi diff -S . --destination "$HOME")" ]; then
            echo "::error::chezmoi apply is not idempotent"
            exit 1
          fi

  # Optional but very useful: make sure Neovim loads headless with your config
  nvim-smoke:
    name: Neovim config loads headless (Ubuntu)
    runs-on: ubuntu-latest
    needs: chezmoi-smoke
    steps:
      - name: Harden runner (audit egress)
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit
      - uses: actions/checkout@v4
      - name: Set ephemeral HOME
        run: |
          echo "HOME=$RUNNER_TEMP/home" >> "$GITHUB_ENV"
          mkdir -p "$RUNNER_TEMP/home"
      - name: Install chezmoi
        run: |
          sh -c "$(curl -fsLS get.chezmoi.io)" -- -b "$RUNNER_TEMP/bin"
          echo "$RUNNER_TEMP/bin" >> "$GITHUB_PATH"
      - name: Apply dotfiles
        run: chezmoi apply -S . --destination "$HOME" --verbose
      - name: Install Neovim
        run: sudo apt-get update -qq && sudo apt-get install -y neovim
      - name: Headless startup
        env:
          XDG_CACHE_HOME:  ${{ env.HOME }}/.cache
          XDG_STATE_HOME:  ${{ env.HOME }}/.local/state
          XDG_DATA_HOME:   ${{ env.HOME }}/.local/share
          XDG_CONFIG_HOME: ${{ env.HOME }}/.config
        run: nvim --headless "+qa"
