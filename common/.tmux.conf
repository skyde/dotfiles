# Easy source of config
unbind-key r
bind-key   r  source-file ~/.tmux.conf

# Primary prefix (default)
set -g prefix M-a

# Secondary prefix
set -g prefix2 S-F10
# bind-key -n S-F2 send-prefix

# Reduce delay when using Alt-based keys
# We still keep a vsmall delay as Visual Studio Code terminal
# will not interpret color sequences correctly if not set
set -s escape-time 10

# Start windows and panes numbering at 1
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# Increase scrollback history
set -g history-limit 100000

# Needed for kitty on macOS so Option sends proper escape sequences
set -g xterm-keys on

# Make tmux recognise keys modified with Alt/Meta/Shift
set-option -g extended-keys on

# Advertise that xterm-kitty supports extended keys
set-option -g terminal-features 'xterm-kitty:extkeys'

# Enable OSC 52 clipboard integration
set-option -g set-clipboard on
set -as terminal-features ',xterm*:clipboard'

# Optional: double-tap Ctrl-b to send a literal C-b
# bind-key C-b send-prefix

# Use VIM bindings
setw -g mode-keys vi

# Copy selection with "y" in copy mode (same as Enter)
bind-key -T copy-mode-vi y send -X copy-selection-and-cancel
bind-key -T copy-mode    y send -X copy-selection-and-cancel

# Exit copy/edit mode with Escape (useful when tmux captures the key)
bind-key -T copy-mode-vi Escape send -X cancel
bind-key -T copy-mode    Escape send -X cancel

# Vim bindings for navigation
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Scroll 16 lines at a time (matches VS Code Shift+F4/Shift+F6 macros) while in copy mode
bind-key -T copy-mode-vi S-F4 send-keys -X -N 16 scroll-up
bind-key -T copy-mode-vi S-F6 send-keys -X -N 16 scroll-down
bind-key -T copy-mode S-F4 send-keys -X -N 16 scroll-up
bind-key -T copy-mode S-F6 send-keys -X -N 16 scroll-down

bind-key -r '<' run-shell 'id=$(tmux display -p "#{window_id}"); tmux swap-window -t:-1; tmux select-window -t "$id"'
bind-key -r '>' run-shell 'id=$(tmux display -p "#{window_id}"); tmux swap-window -t:+1; tmux select-window -t "$id"'

# after your prefix declaration
# bind-key l next-window
# bind-key h previous-window

# Pick a terminal description that matches the attached client so
# screen clearing and other capabilities behave correctly.
# Fall back to tmux's bundled terminfo when the outside terminal
# is unknown.
set -g default-terminal "tmux-256color"
if-shell '[ "#{client_termname}" = "xterm-kitty" ]' \
  'set -g default-terminal "xterm-kitty"'
# Advertise truecolor to all terminals tmux runs under
set -ag terminal-overrides ",xterm-256color:RGB"

# Don't eat events that the program should receive (though there is still some issue here)
# unbind -n C-s

set -g allow-passthrough on

# Theme
set -g status-position top
set -g status-bg        '#1a1b26'
set -g status-fg        '#516e7b'

set -g status-left-length  30
set -g status-right-length 80
set -g status-left  "#[bg=#1a1b26,fg=#3C425F] #S  "
set -g status-right "#[fg=#3C425F]#(hostname) "

setw -g window-status-current-format "#[fg=#88c0d0]#[fg=#88c0d0,bg=#516e7b]#[reverse]#I #[fg=#88c0d0,bg=#1a1b26]#W#[default]#[fg=#88c0d0]"
# set -g status-justify centre

# Improve automatic window naming so panes running a shell show the
# current directory, while other programs keep their command name.
set-option -g allow-rename off
set-window-option -g automatic-rename on
set-window-option -g automatic-rename-format \
  '#{?#{||:#{||:#{==:#{pane_current_command},zsh},#{==:#{pane_current_command},bash}},#{==:#{pane_current_command},fish}},#{b:pane_current_path},#{b:pane_current_command}}'

# Remove flags for inactive windows
set-option -g window-status-format " #[fg=#3C425F]#I #[fg=#88c0d0]#W "
# Remove flags for the current (active) window
# set-option -g window-status-current-format "#I:#W"

# Tmux Plugin Manager (TPM) and plugins
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Restore the last session automatically
set -g @continuum-restore 'on'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-max-pane-history-lines '100000'
# Restore additional tools that tmux-resurrect does not handle by default
set -g @resurrect-processes 'lazygit'

# Source local overrides if present
if-shell '[ -f ~/.tmux.conf.local ]' 'source-file ~/.tmux.conf.local'

# Initialize TPM (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
