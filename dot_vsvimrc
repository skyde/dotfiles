" .vsvimrc â€” LazyVim-style bindings for Visual Studio (C++ Development)

" Leader key setup
let mapleader = " "
let maplocalleader = ","

" User Interface
set number
set relativenumber
set cursorline
set scrolloff=8

" Search
set ignorecase
set smartcase
set incsearch
set hlsearch
set nostartofline

" Clipboard and backspace support
" Sync both * and + registers with the system clipboard
set clipboard=unnamed,unnamedplus
set backspace=indent,eol,start

" Reload vimrc
map zl :so ~/.vsvimrc<CR>

" Unbinds the Space key as it's used as the leader key
nnoremap <leader> <NOP>

" Esc removes search highlights automatically
nnoremap <Esc> :nohl<CR>

" Enter block visual mode with <leader>v
nnoremap <leader>v <C-v>

" Using arrow keys as they are ok on Kinesis keyboard & use Colemak so hjkl
" are not in a nice spot
nnoremap <Left> h
nnoremap <Down> j
nnoremap <Up> k
nnoremap <Right> l

" Toggle Hard Mode: disable arrow keys
function! ToggleHardMode()
  if exists('g:hard_mode_enabled') && g:hard_mode_enabled
    let g:hard_mode_enabled = 0
    nnoremap <Left> h
    nnoremap <Down> j
    nnoremap <Up> k
    nnoremap <Right> l
    echo "Hard mode disabled"
  else
    let g:hard_mode_enabled = 1
    nnoremap <Left> <NOP>
    nnoremap <Down> <NOP>
    nnoremap <Up> <NOP>
    nnoremap <Right> <NOP>
    echo "Hard mode enabled"
  endif
endfunction
nnoremap <leader>uh :call ToggleHardMode()<CR>

" Select the entire buffer
nnoremap vig ggVG
" Copy the entire buffer to the clipboard
nnoremap yig ggVGy

" Half page scroll is fixed size
nnoremap <C-u> 16k
nnoremap <C-d> 16j

" Macro key to move down half a page
nnoremap <S-F4> <C-u>
inoremap <S-F4> <C-O><C-u>
vnoremap <S-F4> <C-C><C-u>gv

" Macro key to move up half a page
nnoremap <S-F6> <C-d>
inoremap <S-F6> <C-O><C-d>
vnoremap <S-F6> <C-C><C-d>gv

" Jump back through edits
nmap <C-O> :vsc View.NavigateBackward<CR>
" Jump forward through edits
nmap <C-I> :vsc View.NavigateForward<CR>

" Window/tab navigation
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Visual-mode reselect indenting
vnoremap < <gv
vnoremap > >gv

" Fuzzy search files
nnoremap <leader><leader> :vsc ReSharper.ReSharper_GotoFile<CR>

" This is a workaround for a bug in the 'Save on Format' plugin where cursor moves up one position on save
nnoremap <C-s> :vsc Edit.FormatDocument<CR>:vsc File.SaveAll<CR><Right>
inoremap <C-s> <C-O>:vsc File.SaveAll<CR><Esc><Right>
vnoremap <C-s> <C-C>:vsc Edit.FormatDocument<CR>:vsc File.SaveAll<CR><Right><Right>gv<Esc>

" File ops
" (f)ile (m)anager
nnoremap <leader>fm :vsc File.OpenContainingFolder<CR>
" (f)ile (l)og
nnoremap <leader>r :vsc View.Terminal<CR>

" Solution Explorer and Terminal
nnoremap <leader>e :vsc View.SolutionExplorer<CR>

" Goto
nnoremap gd :vsc Edit.GoToDefinition<CR>
nnoremap gp :vsc Edit.PeekDefinition<CR>
nnoremap gi :vsc Edit.GoToImplementation<CR>
nnoremap gr :vsc Edit.FindAllReferences<CR>
nnoremap gk :vsc Edit.PreviousMethod<CR>
nnoremap gj :vsc Edit.NextMethod<CR>
nnoremap gu :vsc ReSharper.ReSharper_GotoUsage<CR>
nnoremap gc :vsc Edit.ToggleComment<CR>
nnoremap gh :vsc EditorContextMenus.CodeWindow.ToggleHeaderCodeFile<CR>

" Code
nnoremap <leader>cr :vsc ReSharper.ReSharper_Rename<CR>
nnoremap <leader>cR :vsc File.Rename<CR>
nnoremap <leader>ci :vsc Edit.ParameterInfo<CR>

" Git (Version Control)
nnoremap <leader>gd :vsc P4EditVS.Diff<CR>
nnoremap <leader>go :vsc P4EditVS.OpenInP4V<CR>
nnoremap <leader>gr :vsc P4EditVS.RevertIfUnchanged<CR>
nnoremap <leader>gR :vsc P4EditVS.Revert<CR>
nnoremap <leader>ga :vsc P4EditVS.MarkForAdd<CR>
nnoremap <leader>gD :vsc P4EditVS.MarkForDelete<CR>
nnoremap <leader>gh :vsc P4EditVS.History<CR>
nnoremap <leader>gt :vsc P4EditVS.TimelapseView<CR>

" Open the Resharper Quick Fix Dialog
nnoremap <leader>ce :vsc Resharper_AltEnter<CR>

" View quick actions for position (have not seen this working - try a bit but
" possibly disable it)
nnoremap <leader>. :vsc View.QuickActionsForPosition<CR>

" Error & diagnostics navigation
nnoremap <leader>ee :vsc View.ErrorList<CR>
nnoremap <leader>en :vsc View.NextError<CR>
nnoremap <leader>ep :vsc View.PreviousError<CR>

" Tabs
nnoremap ]b :vsc Window.NextTab<CR>
nnoremap [b :vsc Window.PreviousTab<CR>
" Switch tabs with Shift+Left/Right arrows
nnoremap <S-Left> :vsc Window.PreviousTab<CR>
nnoremap <S-Right> :vsc Window.NextTab<CR>
nnoremap <leader>bd :vsc Window.CloseDocumentWindow<CR>
nnoremap <leader>bp :vsc Window.PinTab<CR>
nnoremap <leader>bP :vsc Window.CloseAllButPinned<CR>
nnoremap <leader>bo :vsc File.CloseOtherTabs<CR>

"Peasy Motion - Two char search mode within document
nmap s gS:vsc Tools.InvokePeasyMotionTwoCharJump<CR>

"Peasy Motion - Jump to any open document tab
nmap S gS:vsc Tools.InvokePeasyMotionJumpToDocumentTab<CR>

" Resharper
" noremap ] :vsc ReSharper.ReSharper_GotoNextMember<CR>
" noremap [ :vsc ReSharper.ReSharper_GotoPrevMember<CR>

map <leader>tr :vsc ReSharper.ReSharper_UnitTestRunFromContext<CR>
map <leader>td :vsc ReSharper.ReSharper_UnitTestDebugContext<CR>
map <leader>ta :vsc ReSharper.ReSharper_UnitTestRunSolution<CR>
map <leader>tl :vsc ReSharper.ReSharper_UnitTestSessionRepeatPreviousRun<CR>
map <leader>tt :vsc ReSharper.ReSharper_ShowUnitTestSessions<CR>

map <leader>e :vsc ReSharper.ReSharper_GotoNextErrorInSolution<CR>
map <leader>E :vsc ReSharper.ReSharper_GotoPrevErrorInSolution<CR>

" Build (Make)
map <leader>mb :vsc Build.BuildSolution<CR>
map <leader>mc :vsc Build.Cancel<CR>
map <leader>mr :vsc Debug.Start<CR>
map <leader>ms :vsc Debug.StopDebugging<CR>

" TODO: Add a macro which does this. replace ms with the macro and remove mc
" map <leader>mt :vsc Build.Cancel<CR>:vsc Debug.StopDebugging<CR>

" Fuzzy Find

" Memonic is 'search grep'
map <leader>sg :vsc Tools.FastFind.OpenDocked<CR>

" Window

" Set fullscreen mode using a plugin called 'Minimal VS Plugin' (the memonic is Window -> Fullscreen)
nnoremap <leader>wf :vsc View.Hidemenu<CR>
" nnoremap <leader>ws :vsc Window.NewVerticalTabGroup<CR>
" nnoremap <leader>wv :vsc Window.Split<CR>
" nnoremap <leader>wr :vsc Window.RemoveSplit<CR>

noremap <leader>wp :vsc Window.PinTab<CR>
noremap <leader>wP :vsc Window.CloseAllButPinned<CR>

" Debug

" b(reakpoint) - Toggle a breakpoint at the current line
noremap <leader>db :vsc Debug.ToggleBreakpoint<CR>
" d(isable) - Disable all breakpoins
noremap <leader>dd :vsc Debug.DisableAllBreakpoints<CR>
" e(nable) - Enable all breakpoints
noremap <leader>de :vsc Debug.EnableAllBreakpoints<CR>
" r(emove) - Remove all breakpoints
noremap <leader>dr :vsc Debug.DeleteAllBreakpoints<CR>
" a(ll) - Show the breakpoints list
noremap <leader>da :vsc Debug.Breakpoints<CR>
" c(ontinue) - Continue exeuction of the program
noremap <leader>dc :vsc Debug.Start<CR>

" <leader> + q(ick) + w(atch) - Show the QuickWatch dialog box
nnoremap <Leader>dw :vsc Debug.QuickWatch<CR>

" TODO: Look into how these debug commands are setup - maybe Ctrl+ArrowKey
" would be a better way to do it?

" Run to cursor
nnoremap <leader>dg :vsc Debug.SetNextStatement<CR>
" Step over / next difference
nnoremap <A-h> :vsc Debug.StepOver<CR>:vsc Diff.NextDifference<CR>
" Step into / previous difference
nnoremap <A-l> :vsc Debug.StepInto<CR>:vsc Diff.PreviousDifference<CR>
" Step out / accept current change
nnoremap <A-k> :vsc Debug.StepOut<CR>:vsc TeamFoundationContextMenus.MergeContextMenu.AcceptYours<CR>
" Accept incoming change
nnoremap <A-j> :vsc TeamFoundationContextMenus.MergeContextMenu.AcceptTheirs<CR>
" Accept all current changes
nnoremap <S-A-k> :vsc TeamFoundationContextMenus.MergeContextMenu.AcceptAllYours<CR>
" Accept all incoming changes
nnoremap <S-A-j> :vsc TeamFoundationContextMenus.MergeContextMenu.AcceptAllTheirs<CR>
" Next conflict region
nnoremap <S-A-h> :vsc Diff.NextDifference<CR>
" Previous conflict region
nnoremap <S-A-l> :vsc Diff.PreviousDifference<CR>
